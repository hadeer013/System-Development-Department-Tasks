@using ProductOrderManagement.Models.ViewModels
@model OrderViewModel

@{
    ViewData["Title"] = "Edit";
    var AllCus = (SelectList)ViewBag.AllCus;
}

<h1>Edit</h1>

<h4>Order</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="All" class="text-danger"></div>
            <input asp-for="Id" hidden/>
            <div class="form-group">
                <label asp-for="TotalPrice" class="control-label"></label>
                <input asp-for="TotalPrice" class="form-control" />
                <span asp-validation-for="TotalPrice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <select Asp-for="CustID" class="form-select">
                    <option value="0">---- Select Customer ----</option>
                    @foreach (var cus in AllCus)
                    {
                        if (int.Parse(cus.Value) == Model.CustID)
                        {
                            <option value="@cus.Value" selected>@cus.Text</option>
                        }
                        else
                        {
                            <option value="@cus.Value">@cus.Text</option>
                        }
                        
                    }
                </select>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
